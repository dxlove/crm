<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<description>Shiro安全配置</description>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager"/> 
		<property name="sessionManager" ref="sessionManager" /> 
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="shiroDbRealm" class="com.heshidai.manage.module.sys.service.ShiroDbRealm">
	</bean>
	
	<!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>
    

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/index" />
		<property name="filterChainDefinitions">
			<value>
				/login = authc
				/static/** = anon
				/images/** = anon
				/upload/** = anon
				/logout = anon
				/servlet/validateCodeServlet/** = anon
				/**ajax=anon
				/** = user
			</value>
		</property>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- cacheManager -->
<!-- 	<bean id="shiroCacheManager" class="org.crazycake.shiro.RedisCacheManager">
	    <property name="redisManager" ref="redisManager" />
	</bean> -->
	
	<!-- shiro redisManager -->
<!-- 	<bean id="redisManager" class="org.crazycake.shiro.RedisManager">
	    <property name="host" value="192.168.1.214"/>
	    <property name="host" value="${redis.host}"/>
	    <property name="port" value="${redis.port}"/>
	    <property name="expire" value="${redis.shiroexpire}"/>
	</bean> -->
	
	<!-- redisSessionDAO -->
<!-- 	<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
		<property name="keyPrefix" value="manage_redis_session:" />
	    <property name="redisManager" ref="redisManager" />
	</bean> -->
	
	<bean id="shiroCacheManager" class="com.heshidai.manage.common.shiro.JedisCacheManager">
	   <!--  <property name="redisManager" ref="redisManager" /> -->
	</bean>
	
	<bean id="redisSessionDAO" class="com.heshidai.manage.common.shiro.JedisSessionDAO">
		<!-- <property name="sessionIdGenerator" ref="sessionIdGenerator" /> -->
		<property name="sessionKeyPrefix" value="manage_redis_session:" />
	</bean>
	
	
	<!-- sessionManager -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- session存储的实现 -->
	    <property name="sessionDAO" ref="redisSessionDAO" />
	    <!-- 超时时间 -->
		<property name="globalSessionTimeout" value="${session.sessionTimeout}" />
		<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
		
		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
 		<property name="sessionValidationSchedulerEnabled" value="true"/>
		
		<property name="sessionIdCookie" ref="sharesession" />
	</bean>
	
	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的name,对应的默认是 JSESSIONID -->
		<constructor-arg name="name" value="SHAREJSESSIONID" />
		<!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
		<!-- <property name="path" value="/telesale" /> -->
	</bean>
	
	
	
</beans>